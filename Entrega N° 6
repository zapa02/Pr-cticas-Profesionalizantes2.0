Actividad 1: Matriz con lista de listas
Crear una matriz de 3 x 3 en Python, usando lista de listas. (Sin usar Numpy). La primera fila debe tener los tres primeros múltiplos de 2 (2,4,6). La segunda fila los múltiplos de 5 (5,10,15), y la tercera fila los múltiplos de 7 (7,14,21).

a) Imprimir el promedio de cada fila.

b) Imprimir los valores de la última columna.

c) Multiplicar cada elemento de la matriz por dos, y guardar el resultado en una nueva matriz resultado.

listaDlistas = [[2,4,6],
                   [5,10,15],
                   [7,14,21]]

#a) Imprimir el promedio de cada fila.
for i in listaDlistas:
  promedio= sum(i)/len(i)
  print (promedio)

#b) Imprimir los valores de la última columna.
for i in listaDlistas:
  print(i[2])

#c) Multiplicar cada elemento de la matriz por dos, y guardar el resultado en una nueva matriz resultado.
resultado =[[0,0,0],
            [0,0,0],
            [0,0,0]]
for i in range(len(listaDlistas)):
  for l in range(len(listaDlistas[i])):
    resultado[i][l]=listaDlistas[i][l]*2
    print(*resultado,sep=" ,  ")
    
    Actividad 2: Uso de librerías
Importar la librería math de Python y resolver:

a) Calcular usando una función de math el factorial de 4, 6, 8 y 10.

b) Calcular usando una función de math la raíz cuadada de 25, 49 y 121.

c) Escribir una función que calcule y devuelva el área de un círculo. El radio es pasado por parámetro. Usar la constante pi del módulo math para el cálculo.

import math
 
#a) Calcular usando una función de math el factorial de 4, 6, 8 y 10.
print ("factorial de 4:" + str(math.factorial(4)))
print ("factorial de 6:" + str(math.factorial(6)))
print ("factorial de 8:" + str(math.factorial(8)))
print ("factorial de 10:" + str(math.factorial(10)))

#b) Calcular usando una función de math la raíz cuadada de 25, 49 y 121.
print("raiz de 25:"+ str(math.sqrt(25)))
print("raiz de 49:"+ str(math.sqrt(49)))
print("raiz de 121:"+ str(math.sqrt(121)))
 
#c) Escribir una función que calcule y devuelva el área de un círculo. 
radio= int(input("ingrese el radio del circulo: "))
def area(radio):
    return math.pi*(radio**2)
print("el area del circulo es: " + str(area(radio)))

Actividad 3: Crear vectores y matrices de Numpy
a) Crear un vector en Numpy de 10 elementos, siendo los impares unos y los pares doses.

b) Crear una matriz de 4x9, que esté inicializada con el valor 0.5.

c) Crear un «tablero de ajedrez», con unos en las casillas negras y ceros en las blancas.

d) Crear una matriz de 7x9. Las primeras 3 columnas de la matriz tienen que tener el valor 2. La siguiente columna debe tener el valor 0.2, excepto por el último valor de esa columna, que tiene que ser 0.7. Las otras 5 columnas deben tener el valor 5.

import numpy as np
#a) Crear un vector en Numpy de 10 elementos, siendo los impares unos y los pares doses.
vector= np.ones(10)
par = [2,0,4,6,8]
vector[par]= 2
print(vector)

#b) Crear una matriz de 4x9, que esté inicializada con el valor 0.5.
matriz=np.ones((4,9))*0.5
print(matriz)

#c) Crear un «tablero de ajedrez», con unos en las casillas negras y ceros en las blancas.
Tablero=np.zeros((8,8))
Tablero[::2, 1::2]=1
Tablero[1::2, ::2]=1
print(Tablero)

#d) Crear una matriz de 7x9.
matriz=np.zeros((7,9)) 
matriz[: , 0:3] = 2
matriz[:,3] = 0.2
matriz[-1,3] = 0.7
matriz[:,4:] = 5
print(matriz)

Actividad 4: Matriz aleatoria
Dada la siguiente matriz aleatoria de 5 por 5 con valores entre 0 y 1: matriz_aleatoria=np.random.rand(5,5)

Imprimir las posiciones (Fila y columna) de los elementos de la matriz que son mayores que 0.5

import numpy as np
matriz = np.random.rand(5,5)
print(matriz)
for i in range (matriz.shape[0]):
  for r in range (matriz.shape[1]):
    if matriz[i,r] > 0.5:
      print("filas= ", i, "columnas: ", r)
      
Actividad 5: Operaciones con matrices
Dada la siguiente matriz de Numpy:
lista_de_listas=[ [-22,14.5], 
                  [2.3,55], 
                  [1500, -55.0]]
matriz = np.array(lista_de_listas)
Calcular la suma y el promedio de los elementos de la matriz.

RESULTADO:

import numpy as np

lista_de_listas=[ [-22,14.5], 
                  [2.3,55], 
                  [1500, -55.0]]
matriz = np.array(lista_de_listas)

# Calcular la suma y el promedio de los elementos
 
print("suma de los elementos" , np.sum(matriz))
print("promedio de los elementos" , np.mean(matriz))

Actividad 6: Modificando matrices
Dada la siguiente matriz de Numpy:

lista_de_listas=[ [-22,14.5], 
                  [2.3,55], 
                  [1500, -55.0]]
matriz = np.array(lista_de_listas)

Modificar la matriz original.

a) Restar 4 a la fila 2 de la matriz.

b) Multiplicar por 5 toda la matriz.

c) Dividir por -5 las dos primeras filas de la matriz.

d) Imprimir la ultima fila de la matriz.

RESULTADO

import numpy as np

lista_de_listas=[ [-22,14.5], 
                  [2.3,55], 
                  [1500, -55.0]]
matriz = np.array(lista_de_listas)

print("Matriz original")
print(matriz)

#a) Restar 4 a la fila 2 de la matriz.
matriz[2,:]=matriz[2:]-4
print('fila 2 restada por 4')
print(matriz)

#b) Multiplicar por 5 toda la matriz.
matriz=matriz*5
print('matriz multiplicada por 5')
print(matriz)

#c) Dividir por -2 las dos primeras filas de la matriz.
matriz[:2,]=matriz[:2,]/(-5)
print('las 2 primeras filas divididas por -5')
print(matriz)

#d) Imprimir la ultima fila de la matriz.
print('Ultima fila de la matriz')
print(matriz[-1:,])


